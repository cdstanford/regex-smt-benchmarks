;---
; using 8-bit bit-vectors as characters
; check membership of .Net regex
; regexA = <(/)?(a|abbr|acronym|address|applet|area|b|base|basefont|bdo|big|blockquote|body|br|button|caption|center|cite|code|col|colgroup|dd|del|dir|div|dfn|dl|dt|em|fieldset|font|form|frame|frameset|h[1-6]|head|hr|html|i|iframe|img|input|ins|isindex|kbd|label|legend|li|link|map|menu|meta|noframes|noscript|object|ol|optgroup|option|p|param|pre|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|ul|var|xmp){1}(\s(\"[^\"]*\"*|[^>])*)*>
;---
(set-info :status sat)
;(set-option :print-success true)
(set-logic QF_S)

(declare-const regexA RegLan)
(declare-const x String)

;witness1: "<samp>\u00BFf"
(define-fun Witness1 () String (str.++ "<" (str.++ "s" (str.++ "a" (str.++ "m" (str.++ "p" (str.++ ">" (str.++ "\u{bf}" (str.++ "f" "")))))))))
;witness2: "</strike\u00A0\"\u00A8\x1E\x9>\u0094\u00E1\u0084\u00D3S"
(define-fun Witness2 () String (str.++ "<" (str.++ "/" (str.++ "s" (str.++ "t" (str.++ "r" (str.++ "i" (str.++ "k" (str.++ "e" (str.++ "\u{a0}" (str.++ "\u{22}" (str.++ "\u{a8}" (str.++ "\u{1e}" (str.++ "\u{09}" (str.++ ">" (str.++ "\u{94}" (str.++ "\u{e1}" (str.++ "\u{84}" (str.++ "\u{d3}" (str.++ "S" ""))))))))))))))))))))

(assert (= regexA (re.++ (re.range "<" "<")(re.++ (re.opt (re.range "/" "/"))(re.++ (re.union (re.range "a" "a")(re.union (str.to_re (str.++ "a" (str.++ "b" (str.++ "b" (str.++ "r" "")))))(re.union (str.to_re (str.++ "a" (str.++ "c" (str.++ "r" (str.++ "o" (str.++ "n" (str.++ "y" (str.++ "m" ""))))))))(re.union (str.to_re (str.++ "a" (str.++ "d" (str.++ "d" (str.++ "r" (str.++ "e" (str.++ "s" (str.++ "s" ""))))))))(re.union (str.to_re (str.++ "a" (str.++ "p" (str.++ "p" (str.++ "l" (str.++ "e" (str.++ "t" "")))))))(re.union (str.to_re (str.++ "a" (str.++ "r" (str.++ "e" (str.++ "a" "")))))(re.union (re.range "b" "b")(re.union (str.to_re (str.++ "b" (str.++ "a" (str.++ "s" (str.++ "e" "")))))(re.union (str.to_re (str.++ "b" (str.++ "a" (str.++ "s" (str.++ "e" (str.++ "f" (str.++ "o" (str.++ "n" (str.++ "t" "")))))))))(re.union (str.to_re (str.++ "b" (str.++ "d" (str.++ "o" ""))))(re.union (str.to_re (str.++ "b" (str.++ "i" (str.++ "g" ""))))(re.union (str.to_re (str.++ "b" (str.++ "l" (str.++ "o" (str.++ "c" (str.++ "k" (str.++ "q" (str.++ "u" (str.++ "o" (str.++ "t" (str.++ "e" "")))))))))))(re.union (str.to_re (str.++ "b" (str.++ "o" (str.++ "d" (str.++ "y" "")))))(re.union (str.to_re (str.++ "b" (str.++ "r" "")))(re.union (str.to_re (str.++ "b" (str.++ "u" (str.++ "t" (str.++ "t" (str.++ "o" (str.++ "n" "")))))))(re.union (str.to_re (str.++ "c" (str.++ "a" (str.++ "p" (str.++ "t" (str.++ "i" (str.++ "o" (str.++ "n" ""))))))))(re.union (str.to_re (str.++ "c" (str.++ "e" (str.++ "n" (str.++ "t" (str.++ "e" (str.++ "r" "")))))))(re.union (str.to_re (str.++ "c" (str.++ "i" (str.++ "t" (str.++ "e" "")))))(re.union (str.to_re (str.++ "c" (str.++ "o" (str.++ "d" (str.++ "e" "")))))(re.union (str.to_re (str.++ "c" (str.++ "o" (str.++ "l" ""))))(re.union (str.to_re (str.++ "c" (str.++ "o" (str.++ "l" (str.++ "g" (str.++ "r" (str.++ "o" (str.++ "u" (str.++ "p" "")))))))))(re.union (str.to_re (str.++ "d" (str.++ "d" "")))(re.union (str.to_re (str.++ "d" (str.++ "e" (str.++ "l" ""))))(re.union (str.to_re (str.++ "d" (str.++ "i" (str.++ "r" ""))))(re.union (str.to_re (str.++ "d" (str.++ "i" (str.++ "v" ""))))(re.union (str.to_re (str.++ "d" (str.++ "f" (str.++ "n" ""))))(re.union (str.to_re (str.++ "d" (str.++ "l" "")))(re.union (str.to_re (str.++ "d" (str.++ "t" "")))(re.union (str.to_re (str.++ "e" (str.++ "m" "")))(re.union (str.to_re (str.++ "f" (str.++ "i" (str.++ "e" (str.++ "l" (str.++ "d" (str.++ "s" (str.++ "e" (str.++ "t" "")))))))))(re.union (str.to_re (str.++ "f" (str.++ "o" (str.++ "n" (str.++ "t" "")))))(re.union (str.to_re (str.++ "f" (str.++ "o" (str.++ "r" (str.++ "m" "")))))(re.union (str.to_re (str.++ "f" (str.++ "r" (str.++ "a" (str.++ "m" (str.++ "e" ""))))))(re.union (str.to_re (str.++ "f" (str.++ "r" (str.++ "a" (str.++ "m" (str.++ "e" (str.++ "s" (str.++ "e" (str.++ "t" "")))))))))(re.union (re.++ (re.range "h" "h") (re.range "1" "6"))(re.union (str.to_re (str.++ "h" (str.++ "e" (str.++ "a" (str.++ "d" "")))))(re.union (str.to_re (str.++ "h" (str.++ "r" "")))(re.union (str.to_re (str.++ "h" (str.++ "t" (str.++ "m" (str.++ "l" "")))))(re.union (re.range "i" "i")(re.union (str.to_re (str.++ "i" (str.++ "f" (str.++ "r" (str.++ "a" (str.++ "m" (str.++ "e" "")))))))(re.union (str.to_re (str.++ "i" (str.++ "m" (str.++ "g" ""))))(re.union (str.to_re (str.++ "i" (str.++ "n" (str.++ "p" (str.++ "u" (str.++ "t" ""))))))(re.union (str.to_re (str.++ "i" (str.++ "n" (str.++ "s" ""))))(re.union (str.to_re (str.++ "i" (str.++ "s" (str.++ "i" (str.++ "n" (str.++ "d" (str.++ "e" (str.++ "x" ""))))))))(re.union (str.to_re (str.++ "k" (str.++ "b" (str.++ "d" ""))))(re.union (str.to_re (str.++ "l" (str.++ "a" (str.++ "b" (str.++ "e" (str.++ "l" ""))))))(re.union (str.to_re (str.++ "l" (str.++ "e" (str.++ "g" (str.++ "e" (str.++ "n" (str.++ "d" "")))))))(re.union (str.to_re (str.++ "l" (str.++ "i" "")))(re.union (str.to_re (str.++ "l" (str.++ "i" (str.++ "n" (str.++ "k" "")))))(re.union (str.to_re (str.++ "m" (str.++ "a" (str.++ "p" ""))))(re.union (str.to_re (str.++ "m" (str.++ "e" (str.++ "n" (str.++ "u" "")))))(re.union (str.to_re (str.++ "m" (str.++ "e" (str.++ "t" (str.++ "a" "")))))(re.union (str.to_re (str.++ "n" (str.++ "o" (str.++ "f" (str.++ "r" (str.++ "a" (str.++ "m" (str.++ "e" (str.++ "s" "")))))))))(re.union (str.to_re (str.++ "n" (str.++ "o" (str.++ "s" (str.++ "c" (str.++ "r" (str.++ "i" (str.++ "p" (str.++ "t" "")))))))))(re.union (str.to_re (str.++ "o" (str.++ "b" (str.++ "j" (str.++ "e" (str.++ "c" (str.++ "t" "")))))))(re.union (str.to_re (str.++ "o" (str.++ "l" "")))(re.union (str.to_re (str.++ "o" (str.++ "p" (str.++ "t" (str.++ "g" (str.++ "r" (str.++ "o" (str.++ "u" (str.++ "p" "")))))))))(re.union (str.to_re (str.++ "o" (str.++ "p" (str.++ "t" (str.++ "i" (str.++ "o" (str.++ "n" "")))))))(re.union (re.range "p" "p")(re.union (str.to_re (str.++ "p" (str.++ "a" (str.++ "r" (str.++ "a" (str.++ "m" ""))))))(re.union (str.to_re (str.++ "p" (str.++ "r" (str.++ "e" ""))))(re.union (re.union (re.range "q" "q") (re.range "s" "s"))(re.union (str.to_re (str.++ "s" (str.++ "a" (str.++ "m" (str.++ "p" "")))))(re.union (str.to_re (str.++ "s" (str.++ "c" (str.++ "r" (str.++ "i" (str.++ "p" (str.++ "t" "")))))))(re.union (str.to_re (str.++ "s" (str.++ "e" (str.++ "l" (str.++ "e" (str.++ "c" (str.++ "t" "")))))))(re.union (str.to_re (str.++ "s" (str.++ "m" (str.++ "a" (str.++ "l" (str.++ "l" ""))))))(re.union (str.to_re (str.++ "s" (str.++ "p" (str.++ "a" (str.++ "n" "")))))(re.union (str.to_re (str.++ "s" (str.++ "t" (str.++ "r" (str.++ "i" (str.++ "k" (str.++ "e" "")))))))(re.union (str.to_re (str.++ "s" (str.++ "t" (str.++ "r" (str.++ "o" (str.++ "n" (str.++ "g" "")))))))(re.union (str.to_re (str.++ "s" (str.++ "t" (str.++ "y" (str.++ "l" (str.++ "e" ""))))))(re.union (str.to_re (str.++ "s" (str.++ "u" (str.++ "b" ""))))(re.union (str.to_re (str.++ "s" (str.++ "u" (str.++ "p" ""))))(re.union (str.to_re (str.++ "t" (str.++ "a" (str.++ "b" (str.++ "l" (str.++ "e" ""))))))(re.union (str.to_re (str.++ "t" (str.++ "b" (str.++ "o" (str.++ "d" (str.++ "y" ""))))))(re.union (str.to_re (str.++ "t" (str.++ "d" "")))(re.union (str.to_re (str.++ "t" (str.++ "e" (str.++ "x" (str.++ "t" (str.++ "a" (str.++ "r" (str.++ "e" (str.++ "a" "")))))))))(re.union (str.to_re (str.++ "t" (str.++ "f" (str.++ "o" (str.++ "o" (str.++ "t" ""))))))(re.union (str.to_re (str.++ "t" (str.++ "h" "")))(re.union (str.to_re (str.++ "t" (str.++ "h" (str.++ "e" (str.++ "a" (str.++ "d" ""))))))(re.union (str.to_re (str.++ "t" (str.++ "i" (str.++ "t" (str.++ "l" (str.++ "e" ""))))))(re.union (str.to_re (str.++ "t" (str.++ "r" "")))(re.union (str.to_re (str.++ "t" (str.++ "t" "")))(re.union (re.range "u" "u")(re.union (str.to_re (str.++ "u" (str.++ "l" "")))(re.union (str.to_re (str.++ "v" (str.++ "a" (str.++ "r" "")))) (str.to_re (str.++ "x" (str.++ "m" (str.++ "p" "")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.* (re.++ (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}")))) (re.* (re.union (re.++ (re.range "\u{22}" "\u{22}")(re.++ (re.* (re.union (re.range "\u{00}" "!") (re.range "#" "\u{ff}"))) (re.* (re.range "\u{22}" "\u{22}")))) (re.union (re.range "\u{00}" "=") (re.range "?" "\u{ff}")))))) (re.range ">" ">")))))))

;check that the regex contains some x
(assert (str.in_re x regexA))
;check also the concrete witnesses
(assert (str.in_re Witness1 regexA))
(assert (str.in_re Witness2 regexA))
(check-sat)

;---
; using 8-bit bit-vectors as characters
; check membership of .Net regex
; regexA = (?#Requires that City is followed by a tab or comma)(?#Created by Al Moore)(?<Address1>(?:[a-zA-Z0-9\x20\x2E\x2D])*(?:CIRCLE|CIR|MOUNTAIN|MTN|PARKWAY|PKWY|PKY|PLAZA|PLZA|PLZ|RIDGE|RDG|ROUTE|RTE|TURNPIKE|TURNPK|TPKE|TPK|WAY|WY|SOUTHEAST|SOUTHWEST|SOUTH|EAST|NORTHEAST|NORTHWEST|NORTH|WEST|ARCADE|ARC\x2E|ARC|AVENUE|AVE\x2E|AVE|BOULEVARD|BVD\x2E|BVD|BLVD\x2E|BLVD|CLOSE|CL\x2E|CL|CRESENT|CRES\x2E|CRES|DRIVE|DR\x2E|DR|ESPLANADE|ESP\x2E|ESP|GROVE|GR\x2E|GR|HIGHWAY|HWY\x2E|HWY|LANE|LN\x2E|LN|PARADE|PDE\x2E|PDE|PLACE\x2E|PLACE|PL\x2E|PL|ROAD|RD\x2E|RD|SQUARE|SQ\x2E|SQ|STREET|ST\x2E|ST|TERRACE|TCE\x2E|TCE|S\x2E|W\x2E|N\x2E|E\x2E|N|E|W|S))[,]*\t*\s(?<AptBldg>UNIT[a-zA-Z0-9\x20\x2D\x3A]*|BASEMENT[a-zA-Z0-9\x20\x2D\x3A]*|BSMT[a-zA-Z0-9\x20\x2D\x3A]*|BUILDING[a-zA-Z0-9\x20\x2D\x3A]*|DEPARTMENT[a-zA-Z0-9\x20\x2D\x3A]*|DEPT[a-zA-Z0-9\x20\x2D\x3A]*|FLOOR[a-zA-Z0-9\x20\x2D\x3A]*|FL[a-zA-Z0-9\x20\x2D\x3A]*|PENTHOUSE[a-zA-Z0-9\x20\x2D\x3A]*|PH[a-zA-Z0-9\x20\x2D\x3A]*|ROOM[a-zA-Z0-9\x20\x2D\x3A]*|RM[a-zA-Z0-9\x20\x2D\x3A]*|SLIP[a-zA-Z0-9\x20\x2D\x3A]*|SPACE[a-zA-Z0-9\x20\x2D\x3A]*|SPC[a-zA-Z0-9\x20\x2D\x3A]*|SUITE[a-zA-Z0-9\x20\x2D\x3A]*|\x23[a-zA-Z0-9\x20\x2D\x3A]*|APT[a-zA-Z0-9\x20\x2D\x3A]*|BLDG[a-zA-Z0-9\x20\x2D\x3A]*|PO\sBOX\x3A[a-zA-Z0-9\x20\x2D]*|P\x2EO\x2E\sBOX[a-zA-Z0-9\x20\x2D]*|PO\sBOX[a-zA-Z0-9\x20\x2D]*|BOX[a-zA-Z0-9\x20\x2D]*|\x20*)\x2C*\x2E*\t*(?<City>[a-zA-Z\x20]*)[,]*\t*\x20*(?<State>AL|ALABAMA|AK|ALASKA|AZ|ARIZONA|AR|ARKANSAS|CA|CALIFORNIA|CO|COLORADO|CT|CONNECTICUT|DE|DELAWARE|FL|FLORIDA|GA|GEORGIA|HI|HAWAII|ID|IDAHO|IL|ILLNOIS|IN|INDIANA|IA|IOWA|KS|KANSAS|KY|KENTUCKY|LA|LOUISIANA|ME|MAINE|MD|MARYLAND|MA|MASSACHUSETTS|MI|MICHIGAN|MN|MINNESOTA|MS|MISSISSIPPI|MO|MISSOURI|MT|MONTANA|NE|NEBRASKA|NV|NEVADA|NH|NEW HAMPSHIRE|NJ|NEW JERSEY|NM|NEW MEXICO|NY|NEW YORK|NC|NORTH CAROLINA|ND|NORTH DAKOTA|OH|OHIO|OK|OKLAHOMA|OR|OREGON|PA|PENNSYLVANIA|RI|RHODE ISLAND|SC|SOUTH CAROLINA|SD|SOUTH DAKOTA|TN|TENNESSEE|TX|TEXAS|UT|UTAH|VT|VERMONT|VA|VIRGINIA|WA|WASHINGTON|DC|DISTRICT OF COLUMBIA|WASHINGTON DC|[a-zA-Z]{2})\x2C*\t*\s*(?<ZipCode>[0-9\x2D\x20]{5,10}|\x20*)
;---
;(set-info :status sat)
;(set-option :print-success true)
(set-logic QF_S)

(declare-const regexA RegLan)
(declare-const x String)

;witness1: "UiST .R ,,\x9 MARYLAND\xA-9- 9"
(define-fun Witness1 () String (str.++ "U" (str.++ "i" (str.++ "S" (str.++ "T" (str.++ " " (str.++ "." (str.++ "R" (str.++ " " (str.++ "," (str.++ "," (str.++ "\u{09}" (str.++ " " (str.++ "M" (str.++ "A" (str.++ "R" (str.++ "Y" (str.++ "L" (str.++ "A" (str.++ "N" (str.++ "D" (str.++ "\u{0a}" (str.++ "-" (str.++ "9" (str.++ "-" (str.++ " " (str.++ "9" "")))))))))))))))))))))))))))
;witness2: "\u00FDPLZA,\x9\x9\x9\xABLDGz,.,\x9VIRGINIA,,\x9\x9\x9\xC"
(define-fun Witness2 () String (str.++ "\u{fd}" (str.++ "P" (str.++ "L" (str.++ "Z" (str.++ "A" (str.++ "," (str.++ "\u{09}" (str.++ "\u{09}" (str.++ "\u{09}" (str.++ "\u{0a}" (str.++ "B" (str.++ "L" (str.++ "D" (str.++ "G" (str.++ "z" (str.++ "," (str.++ "." (str.++ "," (str.++ "\u{09}" (str.++ "V" (str.++ "I" (str.++ "R" (str.++ "G" (str.++ "I" (str.++ "N" (str.++ "I" (str.++ "A" (str.++ "," (str.++ "," (str.++ "\u{09}" (str.++ "\u{09}" (str.++ "\u{09}" (str.++ "\u{0c}" ""))))))))))))))))))))))))))))))))))

(assert (= regexA (re.++ (re.++ (re.* (re.union (re.range " " " ")(re.union (re.range "-" ".")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z")))))) (re.union (str.to_re (str.++ "C" (str.++ "I" (str.++ "R" (str.++ "C" (str.++ "L" (str.++ "E" "")))))))(re.union (str.to_re (str.++ "C" (str.++ "I" (str.++ "R" ""))))(re.union (str.to_re (str.++ "M" (str.++ "O" (str.++ "U" (str.++ "N" (str.++ "T" (str.++ "A" (str.++ "I" (str.++ "N" "")))))))))(re.union (str.to_re (str.++ "M" (str.++ "T" (str.++ "N" ""))))(re.union (str.to_re (str.++ "P" (str.++ "A" (str.++ "R" (str.++ "K" (str.++ "W" (str.++ "A" (str.++ "Y" ""))))))))(re.union (str.to_re (str.++ "P" (str.++ "K" (str.++ "W" (str.++ "Y" "")))))(re.union (str.to_re (str.++ "P" (str.++ "K" (str.++ "Y" ""))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "A" (str.++ "Z" (str.++ "A" ""))))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "Z" (str.++ "A" "")))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "Z" ""))))(re.union (str.to_re (str.++ "R" (str.++ "I" (str.++ "D" (str.++ "G" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "R" (str.++ "D" (str.++ "G" ""))))(re.union (str.to_re (str.++ "R" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "R" (str.++ "T" (str.++ "E" ""))))(re.union (str.to_re (str.++ "T" (str.++ "U" (str.++ "R" (str.++ "N" (str.++ "P" (str.++ "I" (str.++ "K" (str.++ "E" "")))))))))(re.union (str.to_re (str.++ "T" (str.++ "U" (str.++ "R" (str.++ "N" (str.++ "P" (str.++ "K" "")))))))(re.union (str.to_re (str.++ "T" (str.++ "P" (str.++ "K" (str.++ "E" "")))))(re.union (str.to_re (str.++ "T" (str.++ "P" (str.++ "K" ""))))(re.union (str.to_re (str.++ "W" (str.++ "A" (str.++ "Y" ""))))(re.union (str.to_re (str.++ "W" (str.++ "Y" "")))(re.union (str.to_re (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "H" (str.++ "E" (str.++ "A" (str.++ "S" (str.++ "T" ""))))))))))(re.union (str.to_re (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "H" (str.++ "W" (str.++ "E" (str.++ "S" (str.++ "T" ""))))))))))(re.union (str.to_re (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "H" ""))))))(re.union (str.to_re (str.++ "E" (str.++ "A" (str.++ "S" (str.++ "T" "")))))(re.union (str.to_re (str.++ "N" (str.++ "O" (str.++ "R" (str.++ "T" (str.++ "H" (str.++ "E" (str.++ "A" (str.++ "S" (str.++ "T" ""))))))))))(re.union (str.to_re (str.++ "N" (str.++ "O" (str.++ "R" (str.++ "T" (str.++ "H" (str.++ "W" (str.++ "E" (str.++ "S" (str.++ "T" ""))))))))))(re.union (str.to_re (str.++ "N" (str.++ "O" (str.++ "R" (str.++ "T" (str.++ "H" ""))))))(re.union (str.to_re (str.++ "W" (str.++ "E" (str.++ "S" (str.++ "T" "")))))(re.union (str.to_re (str.++ "A" (str.++ "R" (str.++ "C" (str.++ "A" (str.++ "D" (str.++ "E" "")))))))(re.union (str.to_re (str.++ "A" (str.++ "R" (str.++ "C" (str.++ "." "")))))(re.union (str.to_re (str.++ "A" (str.++ "R" (str.++ "C" ""))))(re.union (str.to_re (str.++ "A" (str.++ "V" (str.++ "E" (str.++ "N" (str.++ "U" (str.++ "E" "")))))))(re.union (str.to_re (str.++ "A" (str.++ "V" (str.++ "E" (str.++ "." "")))))(re.union (str.to_re (str.++ "A" (str.++ "V" (str.++ "E" ""))))(re.union (str.to_re (str.++ "B" (str.++ "O" (str.++ "U" (str.++ "L" (str.++ "E" (str.++ "V" (str.++ "A" (str.++ "R" (str.++ "D" ""))))))))))(re.union (str.to_re (str.++ "B" (str.++ "V" (str.++ "D" (str.++ "." "")))))(re.union (str.to_re (str.++ "B" (str.++ "V" (str.++ "D" ""))))(re.union (str.to_re (str.++ "B" (str.++ "L" (str.++ "V" (str.++ "D" (str.++ "." ""))))))(re.union (str.to_re (str.++ "B" (str.++ "L" (str.++ "V" (str.++ "D" "")))))(re.union (str.to_re (str.++ "C" (str.++ "L" (str.++ "O" (str.++ "S" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "C" (str.++ "L" (str.++ "." ""))))(re.union (str.to_re (str.++ "C" (str.++ "L" "")))(re.union (str.to_re (str.++ "C" (str.++ "R" (str.++ "E" (str.++ "S" (str.++ "E" (str.++ "N" (str.++ "T" ""))))))))(re.union (str.to_re (str.++ "C" (str.++ "R" (str.++ "E" (str.++ "S" (str.++ "." ""))))))(re.union (str.to_re (str.++ "C" (str.++ "R" (str.++ "E" (str.++ "S" "")))))(re.union (str.to_re (str.++ "D" (str.++ "R" (str.++ "I" (str.++ "V" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "D" (str.++ "R" (str.++ "." ""))))(re.union (str.to_re (str.++ "D" (str.++ "R" "")))(re.union (str.to_re (str.++ "E" (str.++ "S" (str.++ "P" (str.++ "L" (str.++ "A" (str.++ "N" (str.++ "A" (str.++ "D" (str.++ "E" ""))))))))))(re.union (str.to_re (str.++ "E" (str.++ "S" (str.++ "P" (str.++ "." "")))))(re.union (str.to_re (str.++ "E" (str.++ "S" (str.++ "P" ""))))(re.union (str.to_re (str.++ "G" (str.++ "R" (str.++ "O" (str.++ "V" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "G" (str.++ "R" (str.++ "." ""))))(re.union (str.to_re (str.++ "G" (str.++ "R" "")))(re.union (str.to_re (str.++ "H" (str.++ "I" (str.++ "G" (str.++ "H" (str.++ "W" (str.++ "A" (str.++ "Y" ""))))))))(re.union (str.to_re (str.++ "H" (str.++ "W" (str.++ "Y" (str.++ "." "")))))(re.union (str.to_re (str.++ "H" (str.++ "W" (str.++ "Y" ""))))(re.union (str.to_re (str.++ "L" (str.++ "A" (str.++ "N" (str.++ "E" "")))))(re.union (str.to_re (str.++ "L" (str.++ "N" (str.++ "." ""))))(re.union (str.to_re (str.++ "L" (str.++ "N" "")))(re.union (str.to_re (str.++ "P" (str.++ "A" (str.++ "R" (str.++ "A" (str.++ "D" (str.++ "E" "")))))))(re.union (str.to_re (str.++ "P" (str.++ "D" (str.++ "E" (str.++ "." "")))))(re.union (str.to_re (str.++ "P" (str.++ "D" (str.++ "E" ""))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "A" (str.++ "C" (str.++ "E" (str.++ "." "")))))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "A" (str.++ "C" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "P" (str.++ "L" (str.++ "." ""))))(re.union (str.to_re (str.++ "P" (str.++ "L" "")))(re.union (str.to_re (str.++ "R" (str.++ "O" (str.++ "A" (str.++ "D" "")))))(re.union (str.to_re (str.++ "R" (str.++ "D" (str.++ "." ""))))(re.union (str.to_re (str.++ "R" (str.++ "D" "")))(re.union (str.to_re (str.++ "S" (str.++ "Q" (str.++ "U" (str.++ "A" (str.++ "R" (str.++ "E" "")))))))(re.union (str.to_re (str.++ "S" (str.++ "Q" (str.++ "." ""))))(re.union (str.to_re (str.++ "S" (str.++ "Q" "")))(re.union (str.to_re (str.++ "S" (str.++ "T" (str.++ "R" (str.++ "E" (str.++ "E" (str.++ "T" "")))))))(re.union (str.to_re (str.++ "S" (str.++ "T" (str.++ "." ""))))(re.union (str.to_re (str.++ "S" (str.++ "T" "")))(re.union (str.to_re (str.++ "T" (str.++ "E" (str.++ "R" (str.++ "R" (str.++ "A" (str.++ "C" (str.++ "E" ""))))))))(re.union (str.to_re (str.++ "T" (str.++ "C" (str.++ "E" (str.++ "." "")))))(re.union (str.to_re (str.++ "T" (str.++ "C" (str.++ "E" ""))))(re.union (str.to_re (str.++ "S" (str.++ "." "")))(re.union (str.to_re (str.++ "W" (str.++ "." "")))(re.union (str.to_re (str.++ "N" (str.++ "." "")))(re.union (str.to_re (str.++ "E" (str.++ "." ""))) (re.union (re.range "E" "E")(re.union (re.range "N" "N")(re.union (re.range "S" "S") (re.range "W" "W"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.* (re.range "," ","))(re.++ (re.* (re.range "\u{09}" "\u{09}"))(re.++ (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))(re.++ (re.union (re.++ (str.to_re (str.++ "U" (str.++ "N" (str.++ "I" (str.++ "T" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "B" (str.++ "A" (str.++ "S" (str.++ "E" (str.++ "M" (str.++ "E" (str.++ "N" (str.++ "T" ""))))))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "B" (str.++ "S" (str.++ "M" (str.++ "T" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "B" (str.++ "U" (str.++ "I" (str.++ "L" (str.++ "D" (str.++ "I" (str.++ "N" (str.++ "G" ""))))))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "D" (str.++ "E" (str.++ "P" (str.++ "A" (str.++ "R" (str.++ "T" (str.++ "M" (str.++ "E" (str.++ "N" (str.++ "T" ""))))))))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "D" (str.++ "E" (str.++ "P" (str.++ "T" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "F" (str.++ "L" (str.++ "O" (str.++ "O" (str.++ "R" "")))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "F" (str.++ "L" ""))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "P" (str.++ "E" (str.++ "N" (str.++ "T" (str.++ "H" (str.++ "O" (str.++ "U" (str.++ "S" (str.++ "E" "")))))))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "P" (str.++ "H" ""))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "R" (str.++ "O" (str.++ "O" (str.++ "M" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "R" (str.++ "M" ""))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "S" (str.++ "L" (str.++ "I" (str.++ "P" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "S" (str.++ "P" (str.++ "A" (str.++ "C" (str.++ "E" "")))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "S" (str.++ "P" (str.++ "C" "")))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "S" (str.++ "U" (str.++ "I" (str.++ "T" (str.++ "E" "")))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (re.range "#" "#") (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "A" (str.++ "P" (str.++ "T" "")))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "B" (str.++ "L" (str.++ "D" (str.++ "G" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" ":")(re.union (re.range "A" "Z") (re.range "a" "z")))))))(re.union (re.++ (str.to_re (str.++ "P" (str.++ "O" "")))(re.++ (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))(re.++ (str.to_re (str.++ "B" (str.++ "O" (str.++ "X" (str.++ ":" ""))))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z")))))))))(re.union (re.++ (str.to_re (str.++ "P" (str.++ "." (str.++ "O" (str.++ "." "")))))(re.++ (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))(re.++ (str.to_re (str.++ "B" (str.++ "O" (str.++ "X" "")))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z")))))))))(re.union (re.++ (str.to_re (str.++ "P" (str.++ "O" "")))(re.++ (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))(re.++ (str.to_re (str.++ "B" (str.++ "O" (str.++ "X" "")))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z")))))))))(re.union (re.++ (str.to_re (str.++ "B" (str.++ "O" (str.++ "X" "")))) (re.* (re.union (re.range " " " ")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z"))))))) (re.* (re.range " " " ")))))))))))))))))))))))))(re.++ (re.* (re.range "," ","))(re.++ (re.* (re.range "." "."))(re.++ (re.* (re.range "\u{09}" "\u{09}"))(re.++ (re.* (re.union (re.range " " " ")(re.union (re.range "A" "Z") (re.range "a" "z"))))(re.++ (re.* (re.range "," ","))(re.++ (re.* (re.range "\u{09}" "\u{09}"))(re.++ (re.* (re.range " " " "))(re.++ (re.union (str.to_re (str.++ "A" (str.++ "L" "")))(re.union (str.to_re (str.++ "A" (str.++ "L" (str.++ "A" (str.++ "B" (str.++ "A" (str.++ "M" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "A" (str.++ "K" "")))(re.union (str.to_re (str.++ "A" (str.++ "L" (str.++ "A" (str.++ "S" (str.++ "K" (str.++ "A" "")))))))(re.union (str.to_re (str.++ "A" (str.++ "Z" "")))(re.union (str.to_re (str.++ "A" (str.++ "R" (str.++ "I" (str.++ "Z" (str.++ "O" (str.++ "N" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "A" (str.++ "R" "")))(re.union (str.to_re (str.++ "A" (str.++ "R" (str.++ "K" (str.++ "A" (str.++ "N" (str.++ "S" (str.++ "A" (str.++ "S" "")))))))))(re.union (str.to_re (str.++ "C" (str.++ "A" "")))(re.union (str.to_re (str.++ "C" (str.++ "A" (str.++ "L" (str.++ "I" (str.++ "F" (str.++ "O" (str.++ "R" (str.++ "N" (str.++ "I" (str.++ "A" "")))))))))))(re.union (str.to_re (str.++ "C" (str.++ "O" "")))(re.union (str.to_re (str.++ "C" (str.++ "O" (str.++ "L" (str.++ "O" (str.++ "R" (str.++ "A" (str.++ "D" (str.++ "O" "")))))))))(re.union (str.to_re (str.++ "C" (str.++ "T" "")))(re.union (str.to_re (str.++ "C" (str.++ "O" (str.++ "N" (str.++ "N" (str.++ "E" (str.++ "C" (str.++ "T" (str.++ "I" (str.++ "C" (str.++ "U" (str.++ "T" ""))))))))))))(re.union (str.to_re (str.++ "D" (str.++ "E" "")))(re.union (str.to_re (str.++ "D" (str.++ "E" (str.++ "L" (str.++ "A" (str.++ "W" (str.++ "A" (str.++ "R" (str.++ "E" "")))))))))(re.union (str.to_re (str.++ "F" (str.++ "L" "")))(re.union (str.to_re (str.++ "F" (str.++ "L" (str.++ "O" (str.++ "R" (str.++ "I" (str.++ "D" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "G" (str.++ "A" "")))(re.union (str.to_re (str.++ "G" (str.++ "E" (str.++ "O" (str.++ "R" (str.++ "G" (str.++ "I" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "H" (str.++ "I" "")))(re.union (str.to_re (str.++ "H" (str.++ "A" (str.++ "W" (str.++ "A" (str.++ "I" (str.++ "I" "")))))))(re.union (str.to_re (str.++ "I" (str.++ "D" "")))(re.union (str.to_re (str.++ "I" (str.++ "D" (str.++ "A" (str.++ "H" (str.++ "O" ""))))))(re.union (str.to_re (str.++ "I" (str.++ "L" "")))(re.union (str.to_re (str.++ "I" (str.++ "L" (str.++ "L" (str.++ "N" (str.++ "O" (str.++ "I" (str.++ "S" ""))))))))(re.union (str.to_re (str.++ "I" (str.++ "N" "")))(re.union (str.to_re (str.++ "I" (str.++ "N" (str.++ "D" (str.++ "I" (str.++ "A" (str.++ "N" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "I" (str.++ "A" "")))(re.union (str.to_re (str.++ "I" (str.++ "O" (str.++ "W" (str.++ "A" "")))))(re.union (str.to_re (str.++ "K" (str.++ "S" "")))(re.union (str.to_re (str.++ "K" (str.++ "A" (str.++ "N" (str.++ "S" (str.++ "A" (str.++ "S" "")))))))(re.union (str.to_re (str.++ "K" (str.++ "Y" "")))(re.union (str.to_re (str.++ "K" (str.++ "E" (str.++ "N" (str.++ "T" (str.++ "U" (str.++ "C" (str.++ "K" (str.++ "Y" "")))))))))(re.union (str.to_re (str.++ "L" (str.++ "A" "")))(re.union (str.to_re (str.++ "L" (str.++ "O" (str.++ "U" (str.++ "I" (str.++ "S" (str.++ "I" (str.++ "A" (str.++ "N" (str.++ "A" ""))))))))))(re.union (str.to_re (str.++ "M" (str.++ "E" "")))(re.union (str.to_re (str.++ "M" (str.++ "A" (str.++ "I" (str.++ "N" (str.++ "E" ""))))))(re.union (str.to_re (str.++ "M" (str.++ "D" "")))(re.union (str.to_re (str.++ "M" (str.++ "A" (str.++ "R" (str.++ "Y" (str.++ "L" (str.++ "A" (str.++ "N" (str.++ "D" "")))))))))(re.union (str.to_re (str.++ "M" (str.++ "A" "")))(re.union (str.to_re (str.++ "M" (str.++ "A" (str.++ "S" (str.++ "S" (str.++ "A" (str.++ "C" (str.++ "H" (str.++ "U" (str.++ "S" (str.++ "E" (str.++ "T" (str.++ "T" (str.++ "S" ""))))))))))))))(re.union (str.to_re (str.++ "M" (str.++ "I" "")))(re.union (str.to_re (str.++ "M" (str.++ "I" (str.++ "C" (str.++ "H" (str.++ "I" (str.++ "G" (str.++ "A" (str.++ "N" "")))))))))(re.union (str.to_re (str.++ "M" (str.++ "N" "")))(re.union (str.to_re (str.++ "M" (str.++ "I" (str.++ "N" (str.++ "N" (str.++ "E" (str.++ "S" (str.++ "O" (str.++ "T" (str.++ "A" ""))))))))))(re.union (str.to_re (str.++ "M" (str.++ "S" "")))(re.union (str.to_re (str.++ "M" (str.++ "I" (str.++ "S" (str.++ "S" (str.++ "I" (str.++ "S" (str.++ "S" (str.++ "I" (str.++ "P" (str.++ "P" (str.++ "I" ""))))))))))))(re.union (str.to_re (str.++ "M" (str.++ "O" "")))(re.union (str.to_re (str.++ "M" (str.++ "I" (str.++ "S" (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "R" (str.++ "I" "")))))))))(re.union (str.to_re (str.++ "M" (str.++ "T" "")))(re.union (str.to_re (str.++ "M" (str.++ "O" (str.++ "N" (str.++ "T" (str.++ "A" (str.++ "N" (str.++ "A" ""))))))))(re.union (str.to_re (str.++ "N" (str.++ "E" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "B" (str.++ "R" (str.++ "A" (str.++ "S" (str.++ "K" (str.++ "A" "")))))))))(re.union (str.to_re (str.++ "N" (str.++ "V" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "V" (str.++ "A" (str.++ "D" (str.++ "A" "")))))))(re.union (str.to_re (str.++ "N" (str.++ "H" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "W" (str.++ " " (str.++ "H" (str.++ "A" (str.++ "M" (str.++ "P" (str.++ "S" (str.++ "H" (str.++ "I" (str.++ "R" (str.++ "E" ""))))))))))))))(re.union (str.to_re (str.++ "N" (str.++ "J" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "W" (str.++ " " (str.++ "J" (str.++ "E" (str.++ "R" (str.++ "S" (str.++ "E" (str.++ "Y" "")))))))))))(re.union (str.to_re (str.++ "N" (str.++ "M" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "W" (str.++ " " (str.++ "M" (str.++ "E" (str.++ "X" (str.++ "I" (str.++ "C" (str.++ "O" "")))))))))))(re.union (str.to_re (str.++ "N" (str.++ "Y" "")))(re.union (str.to_re (str.++ "N" (str.++ "E" (str.++ "W" (str.++ " " (str.++ "Y" (str.++ "O" (str.++ "R" (str.++ "K" "")))))))))(re.union (str.to_re (str.++ "N" (str.++ "C" "")))(re.union (str.to_re (str.++ "N" (str.++ "O" (str.++ "R" (str.++ "T" (str.++ "H" (str.++ " " (str.++ "C" (str.++ "A" (str.++ "R" (str.++ "O" (str.++ "L" (str.++ "I" (str.++ "N" (str.++ "A" "")))))))))))))))(re.union (str.to_re (str.++ "N" (str.++ "D" "")))(re.union (str.to_re (str.++ "N" (str.++ "O" (str.++ "R" (str.++ "T" (str.++ "H" (str.++ " " (str.++ "D" (str.++ "A" (str.++ "K" (str.++ "O" (str.++ "T" (str.++ "A" "")))))))))))))(re.union (str.to_re (str.++ "O" (str.++ "H" "")))(re.union (str.to_re (str.++ "O" (str.++ "H" (str.++ "I" (str.++ "O" "")))))(re.union (str.to_re (str.++ "O" (str.++ "K" "")))(re.union (str.to_re (str.++ "O" (str.++ "K" (str.++ "L" (str.++ "A" (str.++ "H" (str.++ "O" (str.++ "M" (str.++ "A" "")))))))))(re.union (str.to_re (str.++ "O" (str.++ "R" "")))(re.union (str.to_re (str.++ "O" (str.++ "R" (str.++ "E" (str.++ "G" (str.++ "O" (str.++ "N" "")))))))(re.union (str.to_re (str.++ "P" (str.++ "A" "")))(re.union (str.to_re (str.++ "P" (str.++ "E" (str.++ "N" (str.++ "N" (str.++ "S" (str.++ "Y" (str.++ "L" (str.++ "V" (str.++ "A" (str.++ "N" (str.++ "I" (str.++ "A" "")))))))))))))(re.union (str.to_re (str.++ "R" (str.++ "I" "")))(re.union (str.to_re (str.++ "R" (str.++ "H" (str.++ "O" (str.++ "D" (str.++ "E" (str.++ " " (str.++ "I" (str.++ "S" (str.++ "L" (str.++ "A" (str.++ "N" (str.++ "D" "")))))))))))))(re.union (str.to_re (str.++ "S" (str.++ "C" "")))(re.union (str.to_re (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "H" (str.++ " " (str.++ "C" (str.++ "A" (str.++ "R" (str.++ "O" (str.++ "L" (str.++ "I" (str.++ "N" (str.++ "A" "")))))))))))))))(re.union (str.to_re (str.++ "S" (str.++ "D" "")))(re.union (str.to_re (str.++ "S" (str.++ "O" (str.++ "U" (str.++ "T" (str.++ "H" (str.++ " " (str.++ "D" (str.++ "A" (str.++ "K" (str.++ "O" (str.++ "T" (str.++ "A" "")))))))))))))(re.union (str.to_re (str.++ "T" (str.++ "N" "")))(re.union (str.to_re (str.++ "T" (str.++ "E" (str.++ "N" (str.++ "N" (str.++ "E" (str.++ "S" (str.++ "S" (str.++ "E" (str.++ "E" ""))))))))))(re.union (str.to_re (str.++ "T" (str.++ "X" "")))(re.union (str.to_re (str.++ "T" (str.++ "E" (str.++ "X" (str.++ "A" (str.++ "S" ""))))))(re.union (str.to_re (str.++ "U" (str.++ "T" "")))(re.union (str.to_re (str.++ "U" (str.++ "T" (str.++ "A" (str.++ "H" "")))))(re.union (str.to_re (str.++ "V" (str.++ "T" "")))(re.union (str.to_re (str.++ "V" (str.++ "E" (str.++ "R" (str.++ "M" (str.++ "O" (str.++ "N" (str.++ "T" ""))))))))(re.union (str.to_re (str.++ "V" (str.++ "A" "")))(re.union (str.to_re (str.++ "V" (str.++ "I" (str.++ "R" (str.++ "G" (str.++ "I" (str.++ "N" (str.++ "I" (str.++ "A" "")))))))))(re.union (str.to_re (str.++ "W" (str.++ "A" "")))(re.union (str.to_re (str.++ "W" (str.++ "A" (str.++ "S" (str.++ "H" (str.++ "I" (str.++ "N" (str.++ "G" (str.++ "T" (str.++ "O" (str.++ "N" "")))))))))))(re.union (str.to_re (str.++ "D" (str.++ "C" "")))(re.union (str.to_re (str.++ "D" (str.++ "I" (str.++ "S" (str.++ "T" (str.++ "R" (str.++ "I" (str.++ "C" (str.++ "T" (str.++ " " (str.++ "O" (str.++ "F" (str.++ " " (str.++ "C" (str.++ "O" (str.++ "L" (str.++ "U" (str.++ "M" (str.++ "B" (str.++ "I" (str.++ "A" "")))))))))))))))))))))(re.union (str.to_re (str.++ "W" (str.++ "A" (str.++ "S" (str.++ "H" (str.++ "I" (str.++ "N" (str.++ "G" (str.++ "T" (str.++ "O" (str.++ "N" (str.++ " " (str.++ "D" (str.++ "C" "")))))))))))))) ((_ re.loop 2 2) (re.union (re.range "A" "Z") (re.range "a" "z"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.* (re.range "," ","))(re.++ (re.* (re.range "\u{09}" "\u{09}"))(re.++ (re.* (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))) (re.union ((_ re.loop 5 10) (re.union (re.range " " " ")(re.union (re.range "-" "-") (re.range "0" "9")))) (re.* (re.range " " " ")))))))))))))))))))))

;check that the regex contains some x
(assert (str.in_re x regexA))
;check also the concrete witnesses
(assert (str.in_re Witness1 regexA))
(assert (str.in_re Witness2 regexA))
(check-sat)

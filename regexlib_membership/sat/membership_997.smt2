;---
; using 8-bit bit-vectors as characters
; check membership of .Net regex
; regexA = (?#WebOrIP)((?#protocol)((http|https):\/\/)?(?#subDomain)(([a-zA-Z0-9]+\.(?#domain)[a-zA-Z0-9\-]+(?#TLD)(\.[a-zA-Z]+){1,2})|(?#IPAddress)((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])))+(?#Port)(:[1-9][0-9]*)?)+(?#Path)((\/((?#dirOrFileName)[a-zA-Z0-9_\-\%\~\+]+)?)*)?(?#extension)(\.([a-zA-Z0-9_]+))?(?#parameters)(\?([a-zA-Z0-9_\-]+\=[a-z-A-Z0-9_\-\%\~\+]+)?(?#additionalParameters)(\&([a-zA-Z0-9_\-]+\=[a-z-A-Z0-9_\-\%\~\+]+)?)*)?
;---
(set-info :status sat)
;(set-option :print-success true)
(set-logic QF_S)

(declare-const regexA RegLan)
(declare-const x String)

;witness1: "\u0080\u009Ehttps://252.81.34.1701P1.x9.rtZ:888https://253.255.8.2534.70.1.898.197.90.2519.254.3.8http://255.7.249.254Z.--.U.a:943.255.254.09978.245.195.88/P~a%/?-5_--=%"
(define-fun Witness1 () String (str.++ "\u{80}" (str.++ "\u{9e}" (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ "s" (str.++ ":" (str.++ "/" (str.++ "/" (str.++ "2" (str.++ "5" (str.++ "2" (str.++ "." (str.++ "8" (str.++ "1" (str.++ "." (str.++ "3" (str.++ "4" (str.++ "." (str.++ "1" (str.++ "7" (str.++ "0" (str.++ "1" (str.++ "P" (str.++ "1" (str.++ "." (str.++ "x" (str.++ "9" (str.++ "." (str.++ "r" (str.++ "t" (str.++ "Z" (str.++ ":" (str.++ "8" (str.++ "8" (str.++ "8" (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ "s" (str.++ ":" (str.++ "/" (str.++ "/" (str.++ "2" (str.++ "5" (str.++ "3" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "5" (str.++ "." (str.++ "8" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "3" (str.++ "4" (str.++ "." (str.++ "7" (str.++ "0" (str.++ "." (str.++ "1" (str.++ "." (str.++ "8" (str.++ "9" (str.++ "8" (str.++ "." (str.++ "1" (str.++ "9" (str.++ "7" (str.++ "." (str.++ "9" (str.++ "0" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "1" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "." (str.++ "3" (str.++ "." (str.++ "8" (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ ":" (str.++ "/" (str.++ "/" (str.++ "2" (str.++ "5" (str.++ "5" (str.++ "." (str.++ "7" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "Z" (str.++ "." (str.++ "-" (str.++ "-" (str.++ "." (str.++ "U" (str.++ "." (str.++ "a" (str.++ ":" (str.++ "9" (str.++ "4" (str.++ "3" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "5" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "." (str.++ "0" (str.++ "9" (str.++ "9" (str.++ "7" (str.++ "8" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "5" (str.++ "." (str.++ "1" (str.++ "9" (str.++ "5" (str.++ "." (str.++ "8" (str.++ "8" (str.++ "/" (str.++ "P" (str.++ "~" (str.++ "a" (str.++ "%" (str.++ "/" (str.++ "?" (str.++ "-" (str.++ "5" (str.++ "_" (str.++ "-" (str.++ "-" (str.++ "=" (str.++ "%" ""))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
;witness2: "http://089.238.058.25528.253.237.64254.25.254.248251.19.248.239244.246.82.18:1https://7.7.jx.JYIzrl099.220.254.399.248.144.99217.253.6.2196M6x3.-.KmZ.iI/-//.8?U=-1u"
(define-fun Witness2 () String (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ ":" (str.++ "/" (str.++ "/" (str.++ "0" (str.++ "8" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "3" (str.++ "8" (str.++ "." (str.++ "0" (str.++ "5" (str.++ "8" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "5" (str.++ "2" (str.++ "8" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "3" (str.++ "." (str.++ "2" (str.++ "3" (str.++ "7" (str.++ "." (str.++ "6" (str.++ "4" (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "8" (str.++ "2" (str.++ "5" (str.++ "1" (str.++ "." (str.++ "1" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "8" (str.++ "." (str.++ "2" (str.++ "3" (str.++ "9" (str.++ "2" (str.++ "4" (str.++ "4" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "6" (str.++ "." (str.++ "8" (str.++ "2" (str.++ "." (str.++ "1" (str.++ "8" (str.++ ":" (str.++ "1" (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ "s" (str.++ ":" (str.++ "/" (str.++ "/" (str.++ "7" (str.++ "." (str.++ "7" (str.++ "." (str.++ "j" (str.++ "x" (str.++ "." (str.++ "J" (str.++ "Y" (str.++ "I" (str.++ "z" (str.++ "r" (str.++ "l" (str.++ "0" (str.++ "9" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "2" (str.++ "0" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "4" (str.++ "." (str.++ "3" (str.++ "9" (str.++ "9" (str.++ "." (str.++ "2" (str.++ "4" (str.++ "8" (str.++ "." (str.++ "1" (str.++ "4" (str.++ "4" (str.++ "." (str.++ "9" (str.++ "9" (str.++ "2" (str.++ "1" (str.++ "7" (str.++ "." (str.++ "2" (str.++ "5" (str.++ "3" (str.++ "." (str.++ "6" (str.++ "." (str.++ "2" (str.++ "1" (str.++ "9" (str.++ "6" (str.++ "M" (str.++ "6" (str.++ "x" (str.++ "3" (str.++ "." (str.++ "-" (str.++ "." (str.++ "K" (str.++ "m" (str.++ "Z" (str.++ "." (str.++ "i" (str.++ "I" (str.++ "/" (str.++ "-" (str.++ "/" (str.++ "/" (str.++ "." (str.++ "8" (str.++ "?" (str.++ "U" (str.++ "=" (str.++ "-" (str.++ "1" (str.++ "u" "")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(assert (= regexA (re.++ (re.+ (re.++ (re.opt (re.++ (re.union (str.to_re (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" ""))))) (str.to_re (str.++ "h" (str.++ "t" (str.++ "t" (str.++ "p" (str.++ "s" ""))))))) (str.to_re (str.++ ":" (str.++ "/" (str.++ "/" ""))))))(re.++ (re.+ (re.union (re.++ (re.+ (re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z"))))(re.++ (re.range "." ".")(re.++ (re.+ (re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z") (re.range "a" "z"))))) ((_ re.loop 1 2) (re.++ (re.range "." ".") (re.+ (re.union (re.range "A" "Z") (re.range "a" "z")))))))) (re.++ (re.union (re.++ (str.to_re (str.++ "2" (str.++ "5" ""))) (re.range "0" "5"))(re.union (re.++ (re.range "2" "2")(re.++ (re.range "0" "4") (re.range "0" "9")))(re.union (re.++ (re.range "0" "1") ((_ re.loop 2 2) (re.range "0" "9")))(re.union (re.++ (re.range "1" "9") (re.range "0" "9")) (re.range "1" "9")))))(re.++ (re.range "." ".")(re.++ (re.union (re.++ (str.to_re (str.++ "2" (str.++ "5" ""))) (re.range "0" "5"))(re.union (re.++ (re.range "2" "2")(re.++ (re.range "0" "4") (re.range "0" "9")))(re.union (re.++ (re.range "0" "1") ((_ re.loop 2 2) (re.range "0" "9")))(re.union (re.++ (re.range "1" "9") (re.range "0" "9")) (re.range "0" "9")))))(re.++ (re.range "." ".")(re.++ (re.union (re.++ (str.to_re (str.++ "2" (str.++ "5" ""))) (re.range "0" "5"))(re.union (re.++ (re.range "2" "2")(re.++ (re.range "0" "4") (re.range "0" "9")))(re.union (re.++ (re.range "0" "1") ((_ re.loop 2 2) (re.range "0" "9")))(re.union (re.++ (re.range "1" "9") (re.range "0" "9")) (re.range "0" "9")))))(re.++ (re.range "." ".") (re.union (re.++ (str.to_re (str.++ "2" (str.++ "5" ""))) (re.range "0" "5"))(re.union (re.++ (re.range "2" "2")(re.++ (re.range "0" "4") (re.range "0" "9")))(re.union (re.++ (re.range "0" "1") ((_ re.loop 2 2) (re.range "0" "9")))(re.union (re.++ (re.range "1" "9") (re.range "0" "9")) (re.range "0" "9"))))))))))))) (re.opt (re.++ (re.range ":" ":")(re.++ (re.range "1" "9") (re.* (re.range "0" "9"))))))))(re.++ (re.opt (re.* (re.++ (re.range "/" "/") (re.opt (re.+ (re.union (re.range "%" "%")(re.union (re.range "+" "+")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_")(re.union (re.range "a" "z") (re.range "~" "~")))))))))))))(re.++ (re.opt (re.++ (re.range "." ".") (re.+ (re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_") (re.range "a" "z"))))))) (re.opt (re.++ (re.range "?" "?")(re.++ (re.opt (re.++ (re.+ (re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_") (re.range "a" "z"))))))(re.++ (re.range "=" "=") (re.+ (re.union (re.range "%" "%")(re.union (re.range "+" "+")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_")(re.union (re.range "a" "z") (re.range "~" "~")))))))))))) (re.* (re.++ (re.range "&" "&") (re.opt (re.++ (re.+ (re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_") (re.range "a" "z"))))))(re.++ (re.range "=" "=") (re.+ (re.union (re.range "%" "%")(re.union (re.range "+" "+")(re.union (re.range "-" "-")(re.union (re.range "0" "9")(re.union (re.range "A" "Z")(re.union (re.range "_" "_")(re.union (re.range "a" "z") (re.range "~" "~"))))))))))))))))))))))

;check that the regex contains some x
(assert (str.in_re x regexA))
;check also the concrete witnesses
(assert (str.in_re Witness1 regexA))
(assert (str.in_re Witness2 regexA))
(check-sat)

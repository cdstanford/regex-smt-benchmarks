;---
; using 8-bit bit-vectors as characters
; check membership of .Net regex
; regexA = UploadFriendly is an easy to use Java Applet that will allow multiple file uploads on a web server in a web page. The control supports file filtering, limits and more. Samples available in the following languages: ASP, ASP.NET, PHP, Coldfusion and JSP
;---
(set-info :status sat)
(set-option :print-success true)
(set-logic QF_BVRE)

(declare-const regexA (RegEx String))
(declare-const x String)

;witness1: "\x11UploadFriendly is an easy to use Java Applet that will allow multiple file uploads on a web server in a web page\u00D7 The control supports file filtering, limits and more  Samples available in the following languages: ASP, ASP\x10NET, PHP, Coldfusion and JSP\u00E3B\u00C9h=r"
(define-fun Witness1 () String (seq.++ "\x11" (seq.++ "U" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "F" (seq.++ "r" (seq.++ "i" (seq.++ "e" (seq.++ "n" (seq.++ "d" (seq.++ "l" (seq.++ "y" (seq.++ " " (seq.++ "i" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ " " (seq.++ "e" (seq.++ "a" (seq.++ "s" (seq.++ "y" (seq.++ " " (seq.++ "t" (seq.++ "o" (seq.++ " " (seq.++ "u" (seq.++ "s" (seq.++ "e" (seq.++ " " (seq.++ "J" (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ " " (seq.++ "A" (seq.++ "p" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "t" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "a" (seq.++ "t" (seq.++ " " (seq.++ "w" (seq.++ "i" (seq.++ "l" (seq.++ "l" (seq.++ " " (seq.++ "a" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ " " (seq.++ "m" (seq.++ "u" (seq.++ "l" (seq.++ "t" (seq.++ "i" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "u" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "s" (seq.++ " " (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "s" (seq.++ "e" (seq.++ "r" (seq.++ "v" (seq.++ "e" (seq.++ "r" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "p" (seq.++ "a" (seq.++ "g" (seq.++ "e" (seq.++ "\xd7" (seq.++ " " (seq.++ "T" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "c" (seq.++ "o" (seq.++ "n" (seq.++ "t" (seq.++ "r" (seq.++ "o" (seq.++ "l" (seq.++ " " (seq.++ "s" (seq.++ "u" (seq.++ "p" (seq.++ "p" (seq.++ "o" (seq.++ "r" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "t" (seq.++ "e" (seq.++ "r" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ "," (seq.++ " " (seq.++ "l" (seq.++ "i" (seq.++ "m" (seq.++ "i" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "m" (seq.++ "o" (seq.++ "r" (seq.++ "e" (seq.++ " " (seq.++ " " (seq.++ "S" (seq.++ "a" (seq.++ "m" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ "i" (seq.++ "l" (seq.++ "a" (seq.++ "b" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "o" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ " " (seq.++ "l" (seq.++ "a" (seq.++ "n" (seq.++ "g" (seq.++ "u" (seq.++ "a" (seq.++ "g" (seq.++ "e" (seq.++ "s" (seq.++ ":" (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" (seq.++ "\x10" (seq.++ "N" (seq.++ "E" (seq.++ "T" (seq.++ "," (seq.++ " " (seq.++ "P" (seq.++ "H" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "C" (seq.++ "o" (seq.++ "l" (seq.++ "d" (seq.++ "f" (seq.++ "u" (seq.++ "s" (seq.++ "i" (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "J" (seq.++ "S" (seq.++ "P" (seq.++ "\xe3" (seq.++ "B" (seq.++ "\xc9" (seq.++ "h" (seq.++ "=" (seq.++ "r" "")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
;witness2: "UploadFriendly is an easy to use Java Applet that will allow multiple file uploads on a web server in a web page\u00E7 The control supports file filtering, limits and more\u00BA Samples available in the following languages: ASP, ASP-NET, PHP, Coldfusion and JSP"
(define-fun Witness2 () String (seq.++ "U" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "F" (seq.++ "r" (seq.++ "i" (seq.++ "e" (seq.++ "n" (seq.++ "d" (seq.++ "l" (seq.++ "y" (seq.++ " " (seq.++ "i" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ " " (seq.++ "e" (seq.++ "a" (seq.++ "s" (seq.++ "y" (seq.++ " " (seq.++ "t" (seq.++ "o" (seq.++ " " (seq.++ "u" (seq.++ "s" (seq.++ "e" (seq.++ " " (seq.++ "J" (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ " " (seq.++ "A" (seq.++ "p" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "t" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "a" (seq.++ "t" (seq.++ " " (seq.++ "w" (seq.++ "i" (seq.++ "l" (seq.++ "l" (seq.++ " " (seq.++ "a" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ " " (seq.++ "m" (seq.++ "u" (seq.++ "l" (seq.++ "t" (seq.++ "i" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "u" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "s" (seq.++ " " (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "s" (seq.++ "e" (seq.++ "r" (seq.++ "v" (seq.++ "e" (seq.++ "r" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "p" (seq.++ "a" (seq.++ "g" (seq.++ "e" (seq.++ "\xe7" (seq.++ " " (seq.++ "T" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "c" (seq.++ "o" (seq.++ "n" (seq.++ "t" (seq.++ "r" (seq.++ "o" (seq.++ "l" (seq.++ " " (seq.++ "s" (seq.++ "u" (seq.++ "p" (seq.++ "p" (seq.++ "o" (seq.++ "r" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "t" (seq.++ "e" (seq.++ "r" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ "," (seq.++ " " (seq.++ "l" (seq.++ "i" (seq.++ "m" (seq.++ "i" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "m" (seq.++ "o" (seq.++ "r" (seq.++ "e" (seq.++ "\xba" (seq.++ " " (seq.++ "S" (seq.++ "a" (seq.++ "m" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ "i" (seq.++ "l" (seq.++ "a" (seq.++ "b" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "o" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ " " (seq.++ "l" (seq.++ "a" (seq.++ "n" (seq.++ "g" (seq.++ "u" (seq.++ "a" (seq.++ "g" (seq.++ "e" (seq.++ "s" (seq.++ ":" (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" (seq.++ "-" (seq.++ "N" (seq.++ "E" (seq.++ "T" (seq.++ "," (seq.++ " " (seq.++ "P" (seq.++ "H" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "C" (seq.++ "o" (seq.++ "l" (seq.++ "d" (seq.++ "f" (seq.++ "u" (seq.++ "s" (seq.++ "i" (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "J" (seq.++ "S" (seq.++ "P" ""))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(assert (= regexA (re.++ (str.to_re (seq.++ "U" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "F" (seq.++ "r" (seq.++ "i" (seq.++ "e" (seq.++ "n" (seq.++ "d" (seq.++ "l" (seq.++ "y" (seq.++ " " (seq.++ "i" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ " " (seq.++ "e" (seq.++ "a" (seq.++ "s" (seq.++ "y" (seq.++ " " (seq.++ "t" (seq.++ "o" (seq.++ " " (seq.++ "u" (seq.++ "s" (seq.++ "e" (seq.++ " " (seq.++ "J" (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ " " (seq.++ "A" (seq.++ "p" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "t" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "a" (seq.++ "t" (seq.++ " " (seq.++ "w" (seq.++ "i" (seq.++ "l" (seq.++ "l" (seq.++ " " (seq.++ "a" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ " " (seq.++ "m" (seq.++ "u" (seq.++ "l" (seq.++ "t" (seq.++ "i" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "u" (seq.++ "p" (seq.++ "l" (seq.++ "o" (seq.++ "a" (seq.++ "d" (seq.++ "s" (seq.++ " " (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "s" (seq.++ "e" (seq.++ "r" (seq.++ "v" (seq.++ "e" (seq.++ "r" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ " " (seq.++ "w" (seq.++ "e" (seq.++ "b" (seq.++ " " (seq.++ "p" (seq.++ "a" (seq.++ "g" (seq.++ "e" "")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.union (re.range "\x00" "\x09") (re.range "\x0b" "\xff"))(re.++ (str.to_re (seq.++ " " (seq.++ "T" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "c" (seq.++ "o" (seq.++ "n" (seq.++ "t" (seq.++ "r" (seq.++ "o" (seq.++ "l" (seq.++ " " (seq.++ "s" (seq.++ "u" (seq.++ "p" (seq.++ "p" (seq.++ "o" (seq.++ "r" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "i" (seq.++ "l" (seq.++ "t" (seq.++ "e" (seq.++ "r" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ "," (seq.++ " " (seq.++ "l" (seq.++ "i" (seq.++ "m" (seq.++ "i" (seq.++ "t" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "m" (seq.++ "o" (seq.++ "r" (seq.++ "e" ""))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.union (re.range "\x00" "\x09") (re.range "\x0b" "\xff"))(re.++ (str.to_re (seq.++ " " (seq.++ "S" (seq.++ "a" (seq.++ "m" (seq.++ "p" (seq.++ "l" (seq.++ "e" (seq.++ "s" (seq.++ " " (seq.++ "a" (seq.++ "v" (seq.++ "a" (seq.++ "i" (seq.++ "l" (seq.++ "a" (seq.++ "b" (seq.++ "l" (seq.++ "e" (seq.++ " " (seq.++ "i" (seq.++ "n" (seq.++ " " (seq.++ "t" (seq.++ "h" (seq.++ "e" (seq.++ " " (seq.++ "f" (seq.++ "o" (seq.++ "l" (seq.++ "l" (seq.++ "o" (seq.++ "w" (seq.++ "i" (seq.++ "n" (seq.++ "g" (seq.++ " " (seq.++ "l" (seq.++ "a" (seq.++ "n" (seq.++ "g" (seq.++ "u" (seq.++ "a" (seq.++ "g" (seq.++ "e" (seq.++ "s" (seq.++ ":" (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "A" (seq.++ "S" (seq.++ "P" ""))))))))))))))))))))))))))))))))))))))))))))))))))))))))(re.++ (re.union (re.range "\x00" "\x09") (re.range "\x0b" "\xff")) (str.to_re (seq.++ "N" (seq.++ "E" (seq.++ "T" (seq.++ "," (seq.++ " " (seq.++ "P" (seq.++ "H" (seq.++ "P" (seq.++ "," (seq.++ " " (seq.++ "C" (seq.++ "o" (seq.++ "l" (seq.++ "d" (seq.++ "f" (seq.++ "u" (seq.++ "s" (seq.++ "i" (seq.++ "o" (seq.++ "n" (seq.++ " " (seq.++ "a" (seq.++ "n" (seq.++ "d" (seq.++ " " (seq.++ "J" (seq.++ "S" (seq.++ "P" "")))))))))))))))))))))))))))))))))))))

;check that the regex contains some x
(assert (str.in_re x regexA))
;check also the concrete witnesses
(assert (str.in_re Witness1 regexA))
(assert (str.in_re Witness2 regexA))
(check-sat)

;---
; using 8-bit bit-vectors as characters
; check membership of .Net regex
; regexA = (^[Bb][Ff][Pp][Oo]\s*[0-9]{1,4})|(^[Gg][Ii][Rr]\s*0[Aa][Aa]$)|([Aa][Ss][Cc][Nn]|[Bb][Bb][Nn][Dd]|[Bb][Ii][Qq][Qq]|[Ff][Ii][Qq][Qq]|[Pp][Cc][Rr][Nn]|[Ss][Ii][Qq][Qq]|[Ss][Tt][Hh][Ll]|[Tt][Dd][Cc][Uu]\s*1[Zz][Zz])|(^([Aa][BLbl]|[Bb][ABDHLNRSTabdhlnrst]?|[Cc][ABFHMORTVWabfhmortvw]|[Dd][ADEGHLNTYadeghlnty]|[Ee][CHNXchnx]?|[Ff][KYky]|[Gg][LUYluy]?|[Hh][ADGPRSUXadgprsux]|[Ii][GMPVgmpv]|[JE]|[je]|[Kk][ATWYatwy]|[Ll][ADELNSUadelnsu]?|[Mm][EKLekl]?|[Nn][EGNPRWegnprw]?|[Oo][LXlx]|[Pp][AEHLORaehlor]|[Rr][GHMghm]|[Ss][AEGK-PRSTWYaegk-prstwy]?|[Tt][ADFNQRSWadfnqrsw]|[UB]|[ub]|[Ww][A-DFGHJKMNR-Wa-dfghjkmnr-w]?|[YO]|[yo]|[ZE]|[ze])[1-9][0-9]?[ABEHMNPRVWXYabehmnprvwxy]?\s*[0-9][ABD-HJLNP-UW-Zabd-hjlnp-uw-z]{2}$)
;---
(set-info :status sat)
;(set-option :print-success true)
(set-logic QF_S)

(declare-const regexA RegLan)
(declare-const x String)

;witness1: "E81e7jU"
(define-fun Witness1 () String (str.++ "E" (str.++ "8" (str.++ "1" (str.++ "e" (str.++ "7" (str.++ "j" (str.++ "U" ""))))))))
;witness2: "\u00F7BbbnD\x1FT\u0085"
(define-fun Witness2 () String (str.++ "\u{f7}" (str.++ "B" (str.++ "b" (str.++ "b" (str.++ "n" (str.++ "D" (str.++ "\u{1f}" (str.++ "T" (str.++ "\u{85}" ""))))))))))

(assert (= regexA (re.union (re.++ (str.to_re "")(re.++ (re.union (re.range "B" "B") (re.range "b" "b"))(re.++ (re.union (re.range "F" "F") (re.range "f" "f"))(re.++ (re.union (re.range "P" "P") (re.range "p" "p"))(re.++ (re.union (re.range "O" "O") (re.range "o" "o"))(re.++ (re.* (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}"))))) ((_ re.loop 1 4) (re.range "0" "9"))))))))(re.union (re.++ (str.to_re "")(re.++ (re.union (re.range "G" "G") (re.range "g" "g"))(re.++ (re.union (re.range "I" "I") (re.range "i" "i"))(re.++ (re.union (re.range "R" "R") (re.range "r" "r"))(re.++ (re.* (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}")))))(re.++ (re.range "0" "0")(re.++ (re.union (re.range "A" "A") (re.range "a" "a"))(re.++ (re.union (re.range "A" "A") (re.range "a" "a")) (str.to_re "")))))))))(re.union (re.union (re.++ (re.union (re.range "A" "A") (re.range "a" "a"))(re.++ (re.union (re.range "S" "S") (re.range "s" "s"))(re.++ (re.union (re.range "C" "C") (re.range "c" "c")) (re.union (re.range "N" "N") (re.range "n" "n")))))(re.union (re.++ (re.union (re.range "B" "B") (re.range "b" "b"))(re.++ (re.union (re.range "B" "B") (re.range "b" "b"))(re.++ (re.union (re.range "N" "N") (re.range "n" "n")) (re.union (re.range "D" "D") (re.range "d" "d")))))(re.union (re.++ (re.union (re.range "B" "B") (re.range "b" "b"))(re.++ (re.union (re.range "I" "I") (re.range "i" "i"))(re.++ (re.union (re.range "Q" "Q") (re.range "q" "q")) (re.union (re.range "Q" "Q") (re.range "q" "q")))))(re.union (re.++ (re.union (re.range "F" "F") (re.range "f" "f"))(re.++ (re.union (re.range "I" "I") (re.range "i" "i"))(re.++ (re.union (re.range "Q" "Q") (re.range "q" "q")) (re.union (re.range "Q" "Q") (re.range "q" "q")))))(re.union (re.++ (re.union (re.range "P" "P") (re.range "p" "p"))(re.++ (re.union (re.range "C" "C") (re.range "c" "c"))(re.++ (re.union (re.range "R" "R") (re.range "r" "r")) (re.union (re.range "N" "N") (re.range "n" "n")))))(re.union (re.++ (re.union (re.range "S" "S") (re.range "s" "s"))(re.++ (re.union (re.range "I" "I") (re.range "i" "i"))(re.++ (re.union (re.range "Q" "Q") (re.range "q" "q")) (re.union (re.range "Q" "Q") (re.range "q" "q")))))(re.union (re.++ (re.union (re.range "S" "S") (re.range "s" "s"))(re.++ (re.union (re.range "T" "T") (re.range "t" "t"))(re.++ (re.union (re.range "H" "H") (re.range "h" "h")) (re.union (re.range "L" "L") (re.range "l" "l"))))) (re.++ (re.union (re.range "T" "T") (re.range "t" "t"))(re.++ (re.union (re.range "D" "D") (re.range "d" "d"))(re.++ (re.union (re.range "C" "C") (re.range "c" "c"))(re.++ (re.union (re.range "U" "U") (re.range "u" "u"))(re.++ (re.* (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}")))))(re.++ (re.range "1" "1")(re.++ (re.union (re.range "Z" "Z") (re.range "z" "z")) (re.union (re.range "Z" "Z") (re.range "z" "z")))))))))))))))) (re.++ (str.to_re "")(re.++ (re.union (re.++ (re.union (re.range "A" "A") (re.range "a" "a")) (re.union (re.range "B" "B")(re.union (re.range "L" "L")(re.union (re.range "b" "b") (re.range "l" "l")))))(re.union (re.++ (re.union (re.range "B" "B") (re.range "b" "b")) (re.opt (re.union (re.range "A" "B")(re.union (re.range "D" "D")(re.union (re.range "H" "H")(re.union (re.range "L" "L")(re.union (re.range "N" "N")(re.union (re.range "R" "T")(re.union (re.range "a" "b")(re.union (re.range "d" "d")(re.union (re.range "h" "h")(re.union (re.range "l" "l")(re.union (re.range "n" "n") (re.range "r" "t"))))))))))))))(re.union (re.++ (re.union (re.range "C" "C") (re.range "c" "c")) (re.union (re.range "A" "B")(re.union (re.range "F" "F")(re.union (re.range "H" "H")(re.union (re.range "M" "M")(re.union (re.range "O" "O")(re.union (re.range "R" "R")(re.union (re.range "T" "T")(re.union (re.range "V" "W")(re.union (re.range "a" "b")(re.union (re.range "f" "f")(re.union (re.range "h" "h")(re.union (re.range "m" "m")(re.union (re.range "o" "o")(re.union (re.range "r" "r")(re.union (re.range "t" "t") (re.range "v" "w")))))))))))))))))(re.union (re.++ (re.union (re.range "D" "D") (re.range "d" "d")) (re.union (re.range "A" "A")(re.union (re.range "D" "E")(re.union (re.range "G" "H")(re.union (re.range "L" "L")(re.union (re.range "N" "N")(re.union (re.range "T" "T")(re.union (re.range "Y" "Y")(re.union (re.range "a" "a")(re.union (re.range "d" "e")(re.union (re.range "g" "h")(re.union (re.range "l" "l")(re.union (re.range "n" "n")(re.union (re.range "t" "t") (re.range "y" "y")))))))))))))))(re.union (re.++ (re.union (re.range "E" "E") (re.range "e" "e")) (re.opt (re.union (re.range "C" "C")(re.union (re.range "H" "H")(re.union (re.range "N" "N")(re.union (re.range "X" "X")(re.union (re.range "c" "c")(re.union (re.range "h" "h")(re.union (re.range "n" "n") (re.range "x" "x"))))))))))(re.union (re.++ (re.union (re.range "F" "F") (re.range "f" "f")) (re.union (re.range "K" "K")(re.union (re.range "Y" "Y")(re.union (re.range "k" "k") (re.range "y" "y")))))(re.union (re.++ (re.union (re.range "G" "G") (re.range "g" "g")) (re.opt (re.union (re.range "L" "L")(re.union (re.range "U" "U")(re.union (re.range "Y" "Y")(re.union (re.range "l" "l")(re.union (re.range "u" "u") (re.range "y" "y"))))))))(re.union (re.++ (re.union (re.range "H" "H") (re.range "h" "h")) (re.union (re.range "A" "A")(re.union (re.range "D" "D")(re.union (re.range "G" "G")(re.union (re.range "P" "P")(re.union (re.range "R" "S")(re.union (re.range "U" "U")(re.union (re.range "X" "X")(re.union (re.range "a" "a")(re.union (re.range "d" "d")(re.union (re.range "g" "g")(re.union (re.range "p" "p")(re.union (re.range "r" "s")(re.union (re.range "u" "u") (re.range "x" "x")))))))))))))))(re.union (re.++ (re.union (re.range "I" "I") (re.range "i" "i")) (re.union (re.range "G" "G")(re.union (re.range "M" "M")(re.union (re.range "P" "P")(re.union (re.range "V" "V")(re.union (re.range "g" "g")(re.union (re.range "m" "m")(re.union (re.range "p" "p") (re.range "v" "v")))))))))(re.union (re.union (re.range "E" "E")(re.union (re.range "J" "J")(re.union (re.range "e" "e") (re.range "j" "j"))))(re.union (re.++ (re.union (re.range "K" "K") (re.range "k" "k")) (re.union (re.range "A" "A")(re.union (re.range "T" "T")(re.union (re.range "W" "W")(re.union (re.range "Y" "Y")(re.union (re.range "a" "a")(re.union (re.range "t" "t")(re.union (re.range "w" "w") (re.range "y" "y")))))))))(re.union (re.++ (re.union (re.range "L" "L") (re.range "l" "l")) (re.opt (re.union (re.range "A" "A")(re.union (re.range "D" "E")(re.union (re.range "L" "L")(re.union (re.range "N" "N")(re.union (re.range "S" "S")(re.union (re.range "U" "U")(re.union (re.range "a" "a")(re.union (re.range "d" "e")(re.union (re.range "l" "l")(re.union (re.range "n" "n")(re.union (re.range "s" "s") (re.range "u" "u"))))))))))))))(re.union (re.++ (re.union (re.range "M" "M") (re.range "m" "m")) (re.opt (re.union (re.range "E" "E")(re.union (re.range "K" "L")(re.union (re.range "e" "e") (re.range "k" "l"))))))(re.union (re.++ (re.union (re.range "N" "N") (re.range "n" "n")) (re.opt (re.union (re.range "E" "E")(re.union (re.range "G" "G")(re.union (re.range "N" "N")(re.union (re.range "P" "P")(re.union (re.range "R" "R")(re.union (re.range "W" "W")(re.union (re.range "e" "e")(re.union (re.range "g" "g")(re.union (re.range "n" "n")(re.union (re.range "p" "p")(re.union (re.range "r" "r") (re.range "w" "w"))))))))))))))(re.union (re.++ (re.union (re.range "O" "O") (re.range "o" "o")) (re.union (re.range "L" "L")(re.union (re.range "X" "X")(re.union (re.range "l" "l") (re.range "x" "x")))))(re.union (re.++ (re.union (re.range "P" "P") (re.range "p" "p")) (re.union (re.range "A" "A")(re.union (re.range "E" "E")(re.union (re.range "H" "H")(re.union (re.range "L" "L")(re.union (re.range "O" "O")(re.union (re.range "R" "R")(re.union (re.range "a" "a")(re.union (re.range "e" "e")(re.union (re.range "h" "h")(re.union (re.range "l" "l")(re.union (re.range "o" "o") (re.range "r" "r")))))))))))))(re.union (re.++ (re.union (re.range "R" "R") (re.range "r" "r")) (re.union (re.range "G" "H")(re.union (re.range "M" "M")(re.union (re.range "g" "h") (re.range "m" "m")))))(re.union (re.++ (re.union (re.range "S" "S") (re.range "s" "s")) (re.opt (re.union (re.range "A" "A")(re.union (re.range "E" "E")(re.union (re.range "G" "G")(re.union (re.range "K" "P")(re.union (re.range "R" "T")(re.union (re.range "W" "W")(re.union (re.range "Y" "Y")(re.union (re.range "a" "a")(re.union (re.range "e" "e")(re.union (re.range "g" "g")(re.union (re.range "k" "p")(re.union (re.range "r" "t")(re.union (re.range "w" "w") (re.range "y" "y"))))))))))))))))(re.union (re.++ (re.union (re.range "T" "T") (re.range "t" "t")) (re.union (re.range "A" "A")(re.union (re.range "D" "D")(re.union (re.range "F" "F")(re.union (re.range "N" "N")(re.union (re.range "Q" "S")(re.union (re.range "W" "W")(re.union (re.range "a" "a")(re.union (re.range "d" "d")(re.union (re.range "f" "f")(re.union (re.range "n" "n")(re.union (re.range "q" "s") (re.range "w" "w")))))))))))))(re.union (re.union (re.range "B" "B")(re.union (re.range "U" "U")(re.union (re.range "b" "b") (re.range "u" "u"))))(re.union (re.++ (re.union (re.range "W" "W") (re.range "w" "w")) (re.opt (re.union (re.range "A" "D")(re.union (re.range "F" "H")(re.union (re.range "J" "K")(re.union (re.range "M" "N")(re.union (re.range "R" "W")(re.union (re.range "a" "d")(re.union (re.range "f" "h")(re.union (re.range "j" "k")(re.union (re.range "m" "n") (re.range "r" "w")))))))))))) (re.union (re.range "E" "E")(re.union (re.range "O" "O")(re.union (re.range "Y" "Z")(re.union (re.range "e" "e")(re.union (re.range "o" "o") (re.range "y" "z")))))))))))))))))))))))))))(re.++ (re.range "1" "9")(re.++ (re.opt (re.range "0" "9"))(re.++ (re.opt (re.union (re.range "A" "B")(re.union (re.range "E" "E")(re.union (re.range "H" "H")(re.union (re.range "M" "N")(re.union (re.range "P" "P")(re.union (re.range "R" "R")(re.union (re.range "V" "Y")(re.union (re.range "a" "b")(re.union (re.range "e" "e")(re.union (re.range "h" "h")(re.union (re.range "m" "n")(re.union (re.range "p" "p")(re.union (re.range "r" "r") (re.range "v" "y")))))))))))))))(re.++ (re.* (re.union (re.range "\u{09}" "\u{0d}")(re.union (re.range " " " ")(re.union (re.range "\u{85}" "\u{85}") (re.range "\u{a0}" "\u{a0}")))))(re.++ (re.range "0" "9")(re.++ ((_ re.loop 2 2) (re.union (re.range "A" "B")(re.union (re.range "D" "H")(re.union (re.range "J" "J")(re.union (re.range "L" "L")(re.union (re.range "N" "N")(re.union (re.range "P" "U")(re.union (re.range "W" "Z")(re.union (re.range "a" "b")(re.union (re.range "d" "h")(re.union (re.range "j" "j")(re.union (re.range "l" "l")(re.union (re.range "n" "n")(re.union (re.range "p" "u") (re.range "w" "z"))))))))))))))) (str.to_re ""))))))))))))))

;check that the regex contains some x
(assert (str.in_re x regexA))
;check also the concrete witnesses
(assert (str.in_re Witness1 regexA))
(assert (str.in_re Witness2 regexA))
(check-sat)
